name: Sync and Remove Duplicate School Entries

on:
  push:
    paths:
      - "json/fullSchoolList.json"
  workflow_dispatch:  # Allows manual trigger

jobs:
  update-school-lists:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Remove Duplicate New Entries
        run: |
          import json
          import os

          # Ensure directories exist
          os.makedirs("json", exist_ok=True)
          os.makedirs("text", exist_ok=True)

          # Load full school list
          with open("json/fullSchoolList.json", "r", encoding="utf-8") as f:
              data = json.load(f)

          # Detect duplicates by checking names
          seen = set()
          cleaned_data = []
          duplicates_removed = []

          for entry in data:
              name = entry.get("name", "").strip().lower()
              if name in seen:
                  duplicates_removed.append(entry)  # Store duplicate for logging
              else:
                  seen.add(name)
                  cleaned_data.append(entry)

          # If duplicates were found, commit them as deleted
          if duplicates_removed:
              # Save the cleaned list back
              with open("json/fullSchoolList.json", "w", encoding="utf-8") as f:
                  json.dump(cleaned_data, f, indent=2, ensure_ascii=False)

              # Commit the changes with the deleted entry names
              commit_message = "Deleted duplicate entries: " + ", ".join(
                  [entry['name'] for entry in duplicates_removed]
              )

              os.system("git config --global user.name 'github-actions[bot]'")
              os.system("git config --global user.email 'github-actions[bot]@users.noreply.github.com'")
              os.system("git add json/fullSchoolList.json")
              os.system(f"git commit -m \"{commit_message}\"")
              os.system("git push")

          # Sort the cleaned list alphabetically
          sorted_data = sorted(cleaned_data, key=lambda x: x["name"].strip().lower())

          # Save the sorted full school list
          with open("json/fullSchoolList.json", "w", encoding="utf-8") as f:
              json.dump(sorted_data, f, indent=2, ensure_ascii=False)

          # Extract and sort school names
          school_names = [entry["name"] for entry in sorted_data]

          # Save to JSON
          with open("json/schoolList.json", "w", encoding="utf-8") as f:
              json.dump(school_names, f, indent=2, ensure_ascii=False)

          # Save to TXT
          with open("text/schoolList.txt", "w", encoding="utf-8") as f:
              f.write("\n".join(school_names) + "\n")

      - name: Commit and Push Sorted List
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          # Check for changes and commit if needed
          git diff --quiet && exit 0  # Exit if no changes
          git add json/fullSchoolList.json json/schoolList.json text/schoolList.txt
          git commit -m "ðŸ¥‚Sorted and Updated the EntriesðŸ¥‚"
          git push
